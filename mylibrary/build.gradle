plugins {
    alias(libs.plugins.android.library)
}

android {
    ndkVersion '28.1.13356709'
    namespace 'xyz.sl.mylibrary'
    compileSdk 35

    defaultConfig {
        minSdk 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ''
                arguments "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_PLATFORM=android-24",
                        "-DANDROID_STL=c++_static",
                        "-DANDROID_CPP_FEATURES=exceptions rtti",
                        "-DANDROID_ARM_MODE=arm",
                        "-DANDROID_ARM_NEON=TRUE",
                        "-DANDROID_WEAK_API_DEFS=ON",
                        "-DCMAKE_CXX_STANDARD=17",
                        "-DCMAKE_CXX_EXTENSIONS=OFF"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    // Configure many variants
    flavorDimensions "default"
    productFlavors {
        debug_ {
            ndk {
                abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
            }
            externalNativeBuild {
                cmake {
                    cFlags    "-O0"
                    cppFlags  "-O0"
                    arguments "-DJUCE_BUILD_CONFIGURATION=DEBUG"
                }
            }

            dimension "default"
        }
        release_ {
            externalNativeBuild {
                cmake {
                    cFlags    "-O3"
                    cppFlags  "-O3"
                    arguments "-DJUCE_BUILD_CONFIGURATION=RELEASE"
                }
            }

            dimension "default"
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains ("debug_")
                && variant.buildType.name != "debug") {
            setIgnore(true)
        }
        if (names.contains ("release_")
                && variant.buildType.name != "release") {
            setIgnore(true)
        }
    }


}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}